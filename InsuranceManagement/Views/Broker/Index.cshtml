@model IEnumerable<InsuranceCore.Models.Broker>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@*<h2>Index</h2>*@

@*<p>
        <a asp-action="CreateBroker">Create New</a>
    </p>*@
<div class="container-fluid">
    @{
        if (ViewData["Error"] != null || ViewData["Message"] != null)
        {
            string alertType = ViewData["Error"] != null ? "danger" : "success";
            string alertIcon = ViewData["Error"] != null ? "fa-exclamation-circle" : "fa-check-circle";
            string alertHeading = ViewData["Error"] != null ? "Error!" : "Success!";
            string alertMessage = ViewData["Error"] != null ? ViewData["Error"].ToString() : ViewData["Message"].ToString();
            <div class="alert alert-@alertType alert-dismissible fade show" role="alert" id="dynamic-alert">
                <!-- Add cancel button with icon at the top -->
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <div class="d-flex align-items-center">
                    <i class="fa @alertIcon me-2"></i>
                    <div>
                        <h5 class="alert-heading">@alertHeading</h5>
                        <p id="alert-message">@alertMessage</p>
                    </div>
                </div>
            </div>
        }
    }

</div>
<button type="button" class="btn btn-primary" style="background-color: #25237a;">
    <a asp-action="CreateBroker" style="color: white; text-decoration: none;">Create New</a>
</button>
<input type="text" id="searchTerm" placeholder="Search by account number...">
@if (TempData.ContainsKey("ResultMessage"))
{
    <div class="alert @((TempData["ResultMessage"].ToString().StartsWith("Success")) ? "alert-success" : "alert-danger")" id="resultMessage">
        @TempData["ResultMessage"]
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BrokerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-account-number="@item.AccountNumber">
                <td>
                    @Html.DisplayFor(modelItem => item.BrokerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    <button type="button" class="btn btn-sm btn-primary" style="background-color: #25237a; display: inline-block;">
                        <a asp-action="EditBroker" asp-route-id="@item.Id" style="color: white; text-decoration: none;"><i class="zmdi zmdi-edit"></i></a>
                    </button>

                    <button type="button" class="btn btn-sm btn-danger" style="background-color: #f00; border-color: #f00; display: inline-block;">
                        <a asp-action="DeleteBroker" asp-route-id="@item.Id" style="color: white; text-decoration: none;"><i class="zmdi zmdi-delete"></i></a>
                    </button>
                </td>


            </tr>
        }
    </tbody>
</table>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/assets/bundles/libscripts.bundle.js"></script>
@*<script src="~/assets/bundles/mainscripts.bundle.js"></script>*@
<script src="~/assets/bundles/vendorscripts.bundle.js"></script>
<script>
    const searchInput = document.getElementById('searchTerm');

    searchInput.addEventListener('keyup', (e) => {
        if (e.key === "Enter") {
            searchByAccountNumber();
        }
    });

    function searchByAccountNumber() {
        const searchTerm1 = searchInput.value.trim().toLowerCase();
        const rows = document.querySelectorAll('tbody tr');

        rows.forEach(row => {
            const accountNumberCell = row.getAttribute('data-account-number').toLowerCase();

            if (!accountNumberCell.includes(searchTerm1)) {
                row.style.display = 'none';
            } else {
                row.style.display = '';
            }
        });

        // Show "No results" if needed
        showNoResultsMessage();
    }

    function showNoResultsMessage() {
        const visibleRows = document.querySelectorAll('tbody tr:not([style*="display: none"])');

        if (visibleRows.length === 0) {
            // Show no results message or take appropriate action
        } else {
            // Hide no results message or take appropriate action
        }
    }

    // Initially filter on page load
    searchByAccountNumber();

    $(document).ready(function () {
        setTimeout(function () {
            $("#resultMessage").fadeOut('slow');
        }, 5000);
    });
</script>
